Moving Pictures tutorial
mkdir qiime2-moving-pictures-tutorial #created a new directory called "qiime2-moving-pictures-tutorial
cd qiime2-moving-pictures-tutorial #moved to the new directory

Sample metadata
#metadata downloaded

Obtaining and importing data
mkdir emp-single-end-sequences #created a new directory to store sequence files

#sequence reads downloaded

qiime tools import \ #imports external data into the QIIME 2 system
  --type EMPSingleEndSequences \ #specifies the type of data that is being imported
  --input-path emp-single-end-sequences \ #where to find the data you're importing
  --output-path emp-single-end-sequences.qza #this is where to save the imported data now in a .qza artifact file needed for QIIME2

qiime tools peek emp-single-end-sequences.qza #checking that the import worked as expected

Demultiplexing sequences
qiime demux emp-single \ #tells QIIME 2 to run the demultiplexing plugin for single-end reads. This sets up the demultiplexing process.
  --i-seqs emp-single-end-sequences.qza \ #this inputs the raw sequence data with barcodes
  --m-barcodes-file sample-metadata.tsv \ #the metadata file maps each sample to its corresponding barcode sequence
  --m-barcodes-column barcode-sequence \ #this tells QIIME 2 which column in the metadata file contains the barcode sequence
  --o-per-sample-sequences demux.qza \ #this is the output artifact where QIIME 2 will store the demultiplexed sequences (each sample's reads are separated into individual groups
  --o-error-correction-details demux-details.qza #this line presents Golay error correction details applied to the barcodes

qiime demux summarize \ #this lines runs the summarize method from the demux plugin in QIIME 2, creating a visual summary of the demultiplexed data
  --i-data demux.qza \ #specifies the input data, demux.qza, which is the file containing per-sample demultiplexed sequences
  --o-visualization demux.qzv #Creates a QIIME 2 visualization file, demux.qzv, that can be opened with qiime tools view demux.qzv

Sequence quality control and feature table construction
Option 1: DADA2
qiime dada2 denoise-single \ #this line runs the DADA2 denoising algorithm on single-end reads using QIIME 2 plugin q2-dada2
  --i-demultiplexed-seqs demux.qza \ #specifies the input data, demux.qza, which is the file containing per-sample demultiplexed sequences
  --p-trim-left 0 \ #trims 0 bases from the start of each read
  --p-trunc-len 120 \ #truncates reads at position 120 
  --o-representative-sequences rep-seqs-dada2.qza \ #outputs the file rep-seqs-dada2.qza with representative sequences — one for each feature (or ASV)
  --o-table table-dada2.qza \ #outputs a feature table showing how many times each representative sequence (ASV) appears in each sample
  --o-denoising-stats stats-dada2.qza #outputs denoising statistics, including how many reads were filtered, corrected, merged, or discarded

qiime metadata tabulate \ #calls on the metadata plugin and its tabulate method
  --m-input-file stats-dada2.qza \ #specifies the input file, in this case the denoising statistics generated by DADA2
  --o-visualization stats-dada2.qzv #produces a visualization file (.qzv)

mv rep-seqs-dada2.qza rep-seqs.qza #renames the file rep-seq-dada2.qza to rep-seqs.qza
mv table-dada2.qza table.qza #same thing as before but for the feature table

FeatureTable and FeatureData summaries

qiime feature-table summarize \ #this runs the summarized method from QIIME 2's feature-table plugin. Creating a visual summary of the feature table
  --i-table table.qza \ #specifies the input feature table, table.qza, which contains the number of times each feature (ASV) appears in each sample
  --o-visualization table.qzv \ #outputs a visual summary file, table.qzv
  --m-sample-metadata-file sample-metadata.tsv #links your feature data with your sample metadata
qiime feature-table tabulate-seqs \ #this runs the tabulate-seqs method from the feature-table plugin
  --i-data rep-seqs.qza \ #inputs the representative sequences (rep-seqs.qza) generated from DADA2
  --o-visualization rep-seqs.qzv #outputs the visualization file rep-seqs.qzv

Generate a tree for phylogenetic diversity analyses

qiime phylogeny align-to-tree-mafft-fasttree \ #this runs the full phylogenetic tree-building pipeline sequences using alignment, masking, FastTree, and rooting
  --i-sequences rep-seqs.qza \ #takes the representative sequences to align and build a tree
  --o-alignment aligned-rep-seqs.qza \ #aligns the sequences using MAFFT
  --o-masked-alignment masked-aligned-rep-seqs.qza \ #filters out noisy or variable alignment positions
  --o-tree unrooted-tree.qza \ #builds an unrooted tree using FastTree from the masked alignment
  --o-rooted-tree rooted-tree.qza #roots the tree using midpoint rooting, making it ready for diversity analyses

Alpha and beta diversity analysis

qiime diversity core-metrics-phylogenetic \ #runs the core diversity analysis pipeline using phylogenetic metrics 
  --i-phylogeny rooted-tree.qza \ #uses the rooted phylogenetic tree to calculate tree-based diversity metrics
  --i-table table.qza \ #uses the feature table (ASV counts per sample) as input for diversity calculations
  --p-sampling-depth 1103 \ #each sample is rarefied (reduced) to a depth of 1103 sequences for the purpose of fair comparison between samples
  --m-metadata-file sample-metadata.tsv \ #provides sample metadata for grouping and plotting diversity results
  --output-dir core-metrics-results #saves all diversity results (alpha/beta diversity metrics, PCoA plots, etc.) in a single directory


qiime diversity alpha-group-significance \ #runs a statistical test to see if alpha diversity values differ between metadata-defined groups
  --i-alpha-diversity core-metrics-results/faith_pd_vector.qza \ #specifies that the Faith's Phylogenetic Diversity values (one per sample) from the provided Qiita analysis data are used as input for a group comparison
  --m-metadata-file sample-metadata.tsv \ #provides the sample metadata to define groups (e.g., body site, subject)
  --o-visualization core-metrics-results/faith-pd-group-significance.qzv #creates a visualization file with boxplots and significance test results

qiime diversity alpha-group-significance \ #runs a group comparison on alpha diversity values
  --i-alpha-diversity core-metrics-results/evenness_vector.qza \ #this uses evenness scores for each sample instead of Faith’s PD
  --m-metadata-file sample-metadata.tsv \ #the same metadata to group samples for statistical testing are used
  --o-visualization core-metrics-results/evenness-group-significance.qzv #outputs a second visualization, now showing evenness comparisons between groups


qiime diversity beta-group-significance \ #this runs a statistical test to determine if beta diversity (community dissimilarity between samples) differs between metadata groups
  --i-distance-matrix core-metrics-results/unweighted_unifrac_distance_matrix.qza \ #using unweighted UniFrac distance matrix as input this measures presence/absence-based dissimilarity while considering phylogenetic relationships between microbial communities
  --m-metadata-file sample-metadata.tsv \ #this supplies the sample metadata to define the groups being compared
  --m-metadata-column body-site \ #groups samples based on the body-site column in the metadata
  --o-visualization core-metrics-results/unweighted-unifrac-body-site-significance.qzv \ #creates a visual
  --p-pairwise #does a pairwise group comparisons

qiime diversity beta-group-significance \
  --i-distance-matrix core-metrics-results/unweighted_unifrac_distance_matrix.qza \
  --m-metadata-file sample-metadata.tsv \
  --m-metadata-column subject \ #this groups samples by subject, meaning it's testing whether microbial communities differ between individual people
  --o-visualization core-metrics-results/unweighted-unifrac-subject-group-significance.qzv \ #creates a visual this time showing group significance between subjects
  --p-pairwise #does a pairwise group comparisons

qiime emperor plot \ #uses the emperor tool to generate a 3D ordination plot (PCoA)
  --i-pcoa core-metrics-results/unweighted_unifrac_pcoa_results.qza \ #uses the PCoA results generated from unweighted UniFrac distances, which reflect presence/absence-based phylogenetic differences between samples
  --m-metadata-file sample-metadata.tsv \ #loads the metadata file, which adds contextual information
  --p-custom-axes days-since-experiment-start \ #adds a custom axis (in this case, days since the experiment started) to the Emperor plot
  --o-visualization core-metrics-results/unweighted-unifrac-emperor-days-since-experiment-start.qzv #creates a visual

qiime emperor plot \ #runs the emperor visualization tool
  --i-pcoa core-metrics-results/bray_curtis_pcoa_results.qza \ #uses Bray-Curtis PCoA results, which consider abundance-based community differences
  --m-metadata-file sample-metadata.tsv \ #adds sample metadata for grouping, labeling, and coloring points in the plot
  --p-custom-axes days-since-experiment-start \ #this includes days since experiment start as a custom axis to explore microbial temporal dynamics
  --o-visualization core-metrics-results/bray-curtis-emperor-days-since-experiment-start.qzv #creates the Bray-Curtis version of the time-aware ordination plot

Alpha rarefaction plotting

qiime diversity alpha-rarefaction \ #runs the alpha rarefaction analysis
  --i-table table.qza \ #uses the feature table (ASV counts per sample) as the input data for calculating diversity
  --i-phylogeny rooted-tree.qza \ #this supplies the phylogenetic tree, which is required for computing phylogenetic-based metrics like Faith’s PD
  --p-max-depth 4000 \ #Sets the maximum rarefaction depth which is the highest number of sequences to test
  --m-metadata-file sample-metadata.tsv \ #this provides sample metadata to group and color samples in the plot
  --o-visualization alpha-rarefaction.qzv #creates an interactive visualization

Taxonomic analysis

qiime feature-classifier classify-sklearn \ #this runs the Naive Bayes classification algorithm from the q2-feature-classifier plugin to assign taxonomy
  --i-classifier gg-13-8-99-515-806-nb-classifier.qza \ #uses the pre-trained classifier built on Greengenes 13_8 99% OTUs, trimmed to the V4 region (515F/806R primers) — that matches the sequencing region
  --i-reads rep-seqs.qza \ #takes the representative sequences (ASVs) and matches them to taxa using the classifier
  --o-classification taxonomy.qza #outputs the taxonomy file that maps each ASV to its predicted taxonomic lineage

qiime metadata tabulate \ #creates a human-readable, interactive table from a QIIME 2 artifact
  --m-input-file taxonomy.qza \ #uses the taxonomy output from the classification step
  --o-visualization taxonomy.qzv #produces the .qzv file to view and easily browse which ASVs were assigned to which taxa


qiime taxa barplot \ #runs the barplot visualization tool from the q2-taxa plugin
  --i-table table.qza \ #uses the feature table to determine abundance levels
  --i-taxonomy taxonomy.qza \ #brings in the taxonomy assignments from the classifier so the tool knows what each ASV represents taxonomically
  --m-metadata-file sample-metadata.tsv \ #provides sample metadata so that the visualization can group and label samples
  --o-visualization taxa-bar-plots.qzv #outputs an interactive bar plot visualization


Differential abundance testing with ANCOM-BC

qiime feature-table filter-samples \ #runs the QIIME 2 function to filter samples from the feature table (ASV counts per sample)
  --i-table table.qza \ #uses the full feature table (all samples and features) as the input
  --m-metadata-file sample-metadata.tsv \ #brings the sample metadata so the filter knows which samples belong to which body site
  --p-where "[body-site]='gut'" \ #the SQL-like expression filters samples and tells QIIME 2 to only keep samples where the body-site column is "gut"
  --o-filtered-table gut-table.qza #outputs a new table that only includes gut samples


qiime composition ancombc \ #runs the ANCOM-BC differential abundance test from the q2-composition plugin
  --i-table gut-table.qza \ #uses the filtered feature table that only includes gut samples
  --m-metadata-file sample-metadata.tsv \ #this provides metadata needed for grouping samples in the regression
  --p-formula 'subject' \ #this line tells ANCOM-BC to test for differences in feature abundance between subjects
  --o-differentials ancombc-subject.qza #outputs a differentials file, which contains statistical test results

qiime composition da-barplot \ #this line generates a bar plot visualization of the differentially abundant features identified by ANCOM-BC
  --i-data ancombc-subject.qza \ #uses the differentials file produced in the previous step
  --p-significance-threshold 0.001 \ #this only displays features with a q-value (adjusted p-value) below 0.001, meaning these are strongly significant differences
  --o-visualization da-barplot-subject.qzv #creates an interactive bar plot


qiime taxa collapse \ #runs the collapse function from the q2-taxa plugin
  --i-table gut-table.qza \ #uses the feature table with gut samples only
  --i-taxonomy taxonomy.qza \ #supplies the taxonomy assignments for each ASV so the plugin knows how to group them
  --p-level 6 \ #collapse or aggregate features in a dataset, specifically at the level of the genus in the Greengenes taxonomy. This corresponds to collapsing features at the sixth taxonomic level (Level 6) in the hierarchy: Kingdom, Phylum, Class, Order, Family, and Genus
  --o-collapsed-table gut-table-l6.qza #outputs a new table where ASVs are now grouped by genus, and read counts are summed

qiime composition ancombc \ #runs the ANCOM-BC model again — same as before, but now using genus-level features
  --i-table gut-table-l6.qza \ #ses the genus-collapsed feature table
  --m-metadata-file sample-metadata.tsv \ #brings in sample metadata again
  --p-formula 'subject' \ #compares genus-level abundances between subjects
  --o-differentials l6-ancombc-subject.qza #outputs the statistical results for this genus-level comparison

qiime composition da-barplot \ #generates a bar plot showing which genera differ in abundance between the subjects
  --i-data l6-ancombc-subject.qza \ #uses the output from ANCOM-BC at genus level
  --p-significance-threshold 0.001 \ #filters to show only highly significant genera
  --p-level-delimiter ';' \ #specifies the delimiter used in taxonomic strings
  --o-visualization l6-da-barplot-subject.qzv #creates a bar plot showing which genera are significantly enriched or depleted between subjects in the gut
































